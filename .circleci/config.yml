version: 2
jobs:
  build-and-test:
    docker:
      - image: circleci/ruby:2.5.8
        environment:
          PGHOST: 127.0.0.1
          PGUSER: monitoapi-v2-test
          RACK_ENV: test
          RAILS_ENV: test
          BUNDLER_VERSION: 2.0.1

      - image: circleci/postgres:9.6-alpine
        environment:
          RACK_ENV: test
          RAILS_ENV: test
          POSTGRES_USER: monitoapi-v2-test
          POSTGRES_DB: monitoapi-v2_test
          POSTGRES_PASSWORD: ""

    steps:
      - checkout

      # build
      - type: cache-restore
        key: monitoapi-{{ checksum "Gemfile.lock" }}
      - run: gem install bundler
      - run: bundle install --path vendor/bundle
      - type: cache-save
        key: monitoapi-{{ checksum "Gemfile.lock" }}
        paths:
          - vendor/bundle
      - run:
          name: Wait for DB
          command: dockerize -wait tcp://localhost:5432 -timeout 1m
      - run:
          name: Brakeman
          command: bundle exec brakeman
      - run:
          name: Bundle audit
          command: bundle exec bundle audit check --update
      - run:
          name: Rubocop
          command: bundle exec rubocop --format simple
      - run:
          name: Test Suite
          command: bundle exec rspec --order random --fail-fast

  deploy_env:
    machine: true

    steps:
      - checkout
      - run: docker build -t monitoapi-v2 . -f Dockerfile

  deploy_production:
    machine: true

    steps:
      - checkout
      - run: ./deploy.sh -e=production

workflows:
  version: 2
  build-test-deploy:
    jobs:
      - build-and-test:
          filters:
            branches:
              only: /.*/
            tags:
              only: /production-.*/

      - deploy_env:
          requires:
            - build-and-test
          filters:
            branches:
              ignore: /.*/
            tags:
              only:
                - /production-.*/

      - deploy_production:
          requires:
            - build-and-test
          filters:
            branches:
              only:
                - master
